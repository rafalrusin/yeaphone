YeaPhone - a SIP phone for Yealink USB-P1K handsets using liblinphone
========
(c) Copyright 2006 by Thomas Reitmayr (treimtayr@yahoo.com)
Homepage: <http://www.devbase.at/>
Released under the GNU GENERAL PUBLIC LICENSE v2 or later

The goal of the YeaPhone project is to bring VoIP-Software together with
the Yealink USB handset (USB-P1K) <http://www.yealink.com/en/index.asp>
and at the same time make a PC keyboard and monitor unneccessary. This
makes YeaPhone ideal for "Embedded Devices" as these do typically need
extra devices for user interaction (in this case the handset) while
working very energy efficient. The following descriptions provide
special support for the Linksys NSLU2
<http://www.geekly.de/artikel/gadgets/linksys-nslu2.html>.

"/But why not buy one of the commercially available VoIP phones?/", you
might ask. A few advantages and disadvantages about using YeaPhone on an
NSLU2 I can think of are:

    + The additional costs for NSLU2 owners are relatively low, about
      30 euro for a Yealink P1K.
    + In parallel to YeaPhone one can use an Asterisk server with
      (almost) all of its features, like extensions, configurable
      answering machine, individual dial plans, call lists, fax
      reception(?).

    - Rather complex procedures for installing the OpenSlug firmware and
      the applications. Therefore the use on an NSLU2 is recommended for
      experienced Linux users only.
    - Possible interruptions of calls at high network or CPU loads, eg.
      when massivly accessing connected harddrives or other installed
      services while being on the phone. Note: The QoS issue is not
      discussed here.

Features
--------

    * Display the phone number of incoming and outgoing calls
    * Show the duration of a call
    * Allows to store and recall 10 phone numbers
    * Mute the ring tone of incoming calls
    * Adjustable volume of the speaker
    * and more ... 

Download & Installation
-----------------------

*Linksys NSLU2*

The simplest way to install YeaPhone on OpenSlug/SlugOS 3.10b is to use
the DevBase feed. As the package feed provides already compiled programs
they might not work with different versions of OpenSlug/SlugOS.

Follow these instructions (als root):

   1. Log into your NSLU2 and add the DevBase feed:
      # echo "src devbase http://feed.devbase.at/slugos-3.10" >>
      /etc/ipkg.conf
   2. Update the package database:
      # ipkg update
   3. Install Linphone and YeaPhone:
      # ipkg install linphonec yeaphone
   4. Install an updated USB-HID kernel module (includes patch from
      kernel 2.6.18):
      # ipkg install -force-reinstall kernel-module-usb-hid 

For developers with a working cross-compile environment the BitBake
files are provided for compiling Linphone and YeaPhone

BitBake files for OpenSlug/SlugOS  
<http://download.devbase.at/voip/yeaphone-0.1-bb.tgz>

*Linux-PC*

Currently available are the source code of YeaPhone as well as
neccessary patches for liblinphone, binary packages are not available at
this time. Before compilation the patches have to be applied to the
specified version of Linphone.

Sourcecode for YeaPhone 0.1
<http://download.devbase.at/voip/yeaphone-0.1.tar.gz>
Patch Set for Linphone 1.4.1
<http://download.savannah.nongnu.org/releases/linphone/1.4.x/source/>
<http://download.devbase.at/voip/linphone-1.4.1-patches.tgz>

Configuration
-------------

YeaPhone has to be configured through linphonec, the console version
of Linphone. The following example shows how to get a working connection
to a VoIP provider.

root@NSLU2:~# linphonec
Ready
linphonec> soundcard list
0: ALSA: default device
1: ALSA: USB Audio
2: ALSA: VOIP USB Phone
3: OSS: /dev/dsp
4: OSS: /dev/dsp1
linphonec> soundcard use 2
Using sound device ALSA: VOIP USB Phone
linphonec> proxy add
Adding new proxy setup. Hit ^D to abort.
Enter proxy sip address: sip:sipgate.at
Your identity for this proxy: sip:1234567@sipgate.at
Do you want to register on this proxy (yes/no): yes
Specify register expiration time in seconds (default is 600): 600
Expiration: 600 seconds
Specify route if needed: [leave empty]
No route specified.
--------------------------------------------
sip address: sip:sipgate.at
route:
identity: sip:1234567@sipgate.at
register: yes
expires: 600
--------------------------------------------
Accept the above proxy configuration (yes/no) ?: yes
Proxy added.
linphonec>
Password for 1234567 on "sipgate.at": [enter password]
Registration on sip:sipgate.at sucessful.
linphonec>

Using linphonec the VoIP connection can be tested immediately before
using YeaPhone. The speaker and microphone of the Yealink handset can be
used already, commands still have to be entered through the PC keyboard
though. The most important commands of linphonec are:

    * help [<command>]
      shows the available commands and provides a detailed description
      for each command
    * call <phone number or SIP address>
      dials the specified phone number of SIP address
    * answer
      answers an incoming call
    * terminate
      terminates an (incoming or outgoing) call
    * quit
      unregisters at the VoIP provider and quits linphonec

As soon as calls can be make this way, linphonec can be stopped and
yeaphone can be invoked. Its output should look similar to this:

root@NSLU2:~# yeaphone
path_sysfs = /sys/bus/usb/drivers/yealink/3-1.3:1.3/
path_buf = /dev/input/event2
Ready
Registration on sip:sipgate.at sucessful.

At the same time the current date and time are show on the handset's
display, a quick sequence of status messages appear, and finally the
lower part of the display should be empty. Now the handset's keyboard
can be used to place and receive calls.

The various keys have the following functions:

   1. before a phone call
          * 0-9
            Dial a phone number
          * C
            Remove the last character of the dialed number
          * C pressed long
            Remove the complete number
          * <red key>
            Remove the complete number
          * <green key>
            Initiate the call
          * # + <0-9>
            No number dialed yet: Recall and display a number from
            memory X
            Number already dialed: Store the currently displayed number
            at memory X
   2. during a phone call
          * 0-9,*,#
            Generate DTMF tones
          * <red key>
            Terminate the call
          * VOL+/-
            Adjust the speaker's volume 
   3. after a phone call (with the last number displayed)
          * 0-9
            Dial a new phone number
          * C
            Remove the complete number
          * <red key>
            Remove the complete number
          * <green key>
            Redial the last number
          * # + <0-9>
            Store the last number to memory /X/ 
   4. when the phone rings
          * #
            Mute the ringing without picking up
          * <red key>
            Immediately terminate the call without picking up
          * <green key>
            Pick up 
   5. general
          * <red key> pressed long
            Start and stop the VoIP connection (corresponds to turning
            on/off a phone) 

To correctly understand the phone number of incoming calls, YeaPhone
needs some adjustments in the file ~/.yeaphonerc. After terminating
yeaphone the parameters intl-access-code, natl-access-code, and
country-code should be changed accordingly, the default values work for
Austria only.

Disclaimer:
-----------
The author does not take any responsibility for problems and damage
arising by installing or using this software, use it at your own risk.
